<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-03-21T09:04:47 CET" name="Suite" finished-at="2025-03-21T09:06:36 CET" duration-ms="108674">
    <groups>
    </groups>
    <test started-at="2025-03-21T09:04:47 CET" name="Test" finished-at="2025-03-21T09:06:36 CET" duration-ms="108674">
      <class name="tests.PlaceOrderWomenTest">
        <test-method is-config="true" signature="setUp(org.testng.ITestContext)[pri:0, instance:tests.PlaceOrderWomenTest@17f7cd29]" started-at="2025-03-21T09:05:11 CET" name="setUp" finished-at="2025-03-21T09:05:12 CET" duration-ms="686" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2fbd390]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.PlaceOrderWomenTest@17f7cd29]" started-at="2025-03-21T09:05:12 CET" name="setUp" finished-at="2025-03-21T09:05:12 CET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testPlaceOrderWomen()[pri:0, instance:tests.PlaceOrderWomenTest@17f7cd29]" started-at="2025-03-21T09:05:12 CET" name="testPlaceOrderWomen" finished-at="2025-03-21T09:05:39 CET" duration-ms="27067" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPlaceOrderWomen -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.PlaceOrderWomenTest@17f7cd29]" started-at="2025-03-21T09:05:39 CET" name="getResult" finished-at="2025-03-21T09:05:39 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPlaceOrderWomen status=SUCCESS method=PlaceOrderWomenTest.testPlaceOrderWomen()[pri:0, instance:tests.PlaceOrderWomenTest@17f7cd29] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.PlaceOrderWomenTest@17f7cd29]" started-at="2025-03-21T09:05:39 CET" name="tearDown" finished-at="2025-03-21T09:05:41 CET" duration-ms="2488" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.PlaceOrderWomenTest -->
      <class name="tests.ExternalAPIInteractionTest">
        <test-method is-config="true" signature="setUp(org.testng.ITestContext)[pri:0, instance:tests.ExternalAPIInteractionTest@7d8704ef]" started-at="2025-03-21T09:05:41 CET" name="setUp" finished-at="2025-03-21T09:05:42 CET" duration-ms="617" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2fbd390]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testMagentoDemoSite()[pri:0, instance:tests.ExternalAPIInteractionTest@7d8704ef]" started-at="2025-03-21T09:05:42 CET" name="testMagentoDemoSite" finished-at="2025-03-21T09:05:52 CET" duration-ms="9769" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMagentoDemoSite -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.ExternalAPIInteractionTest@7d8704ef]" started-at="2025-03-21T09:05:42 CET" name="setUp" finished-at="2025-03-21T09:05:42 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.ExternalAPIInteractionTest@7d8704ef]" started-at="2025-03-21T09:05:52 CET" name="tearDown" finished-at="2025-03-21T09:05:54 CET" duration-ms="2419" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.ExternalAPIInteractionTest@7d8704ef]" started-at="2025-03-21T09:05:52 CET" name="getResult" finished-at="2025-03-21T09:05:52 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMagentoDemoSite status=SUCCESS method=ExternalAPIInteractionTest.testMagentoDemoSite()[pri:0, instance:tests.ExternalAPIInteractionTest@7d8704ef] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- tests.ExternalAPIInteractionTest -->
      <class name="tests.SubmitReviewTest">
        <test-method is-config="true" signature="setUp1()[pri:0, instance:tests.SubmitReviewTest@c0c2f8d]" started-at="2025-03-21T09:04:47 CET" name="setUp1" finished-at="2025-03-21T09:04:47 CET" duration-ms="217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp1 -->
        <test-method is-config="true" signature="BT()[pri:0, instance:tests.SubmitReviewTest@c0c2f8d]" started-at="2025-03-21T09:04:47 CET" name="BT" finished-at="2025-03-21T09:04:47 CET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BT -->
        <test-method is-config="true" signature="setUp(org.testng.ITestContext)[pri:0, instance:tests.SubmitReviewTest@c0c2f8d]" started-at="2025-03-21T09:04:47 CET" name="setUp" finished-at="2025-03-21T09:04:49 CET" duration-ms="1903" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2fbd390]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.SubmitReviewTest@c0c2f8d]" started-at="2025-03-21T09:04:49 CET" name="setUp" finished-at="2025-03-21T09:04:49 CET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSubmitReview()[pri:0, instance:tests.SubmitReviewTest@c0c2f8d]" started-at="2025-03-21T09:04:49 CET" name="testSubmitReview" finished-at="2025-03-21T09:05:08 CET" duration-ms="19020" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error message not displayed correctly. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error message not displayed correctly. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at tests.SubmitReviewTest.testSubmitReview(SubmitReviewTest.java:71)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubmitReview -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.SubmitReviewTest@c0c2f8d]" started-at="2025-03-21T09:05:09 CET" name="getResult" finished-at="2025-03-21T09:05:09 CET" duration-ms="144" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSubmitReview status=FAILURE method=SubmitReviewTest.testSubmitReview()[pri:0, instance:tests.SubmitReviewTest@c0c2f8d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.SubmitReviewTest@c0c2f8d]" started-at="2025-03-21T09:05:09 CET" name="tearDown" finished-at="2025-03-21T09:05:11 CET" duration-ms="2461" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="AT()[pri:0, instance:tests.SubmitReviewTest@c0c2f8d]" started-at="2025-03-21T09:06:36 CET" name="AT" finished-at="2025-03-21T09:06:36 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AT -->
        <test-method is-config="true" signature="AS()[pri:0, instance:tests.SubmitReviewTest@c0c2f8d]" started-at="2025-03-21T09:06:36 CET" name="AS" finished-at="2025-03-21T09:06:36 CET" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AS -->
      </class> <!-- tests.SubmitReviewTest -->
      <class name="tests.CreateAccountExistingMailIDTest">
        <test-method is-config="true" signature="setUp(org.testng.ITestContext)[pri:0, instance:tests.CreateAccountExistingMailIDTest@158a8276]" started-at="2025-03-21T09:06:25 CET" name="setUp" finished-at="2025-03-21T09:06:26 CET" duration-ms="610" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2fbd390]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testExistingEmailErrorMessage()[pri:0, instance:tests.CreateAccountExistingMailIDTest@158a8276]" started-at="2025-03-21T09:06:26 CET" name="testExistingEmailErrorMessage" finished-at="2025-03-21T09:06:34 CET" duration-ms="8053" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExistingEmailErrorMessage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.CreateAccountExistingMailIDTest@158a8276]" started-at="2025-03-21T09:06:26 CET" name="setUp" finished-at="2025-03-21T09:06:26 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.CreateAccountExistingMailIDTest@158a8276]" started-at="2025-03-21T09:06:34 CET" name="getResult" finished-at="2025-03-21T09:06:34 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testExistingEmailErrorMessage status=SUCCESS method=CreateAccountExistingMailIDTest.testExistingEmailErrorMessage()[pri:0, instance:tests.CreateAccountExistingMailIDTest@158a8276] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateAccountExistingMailIDTest@158a8276]" started-at="2025-03-21T09:06:34 CET" name="tearDown" finished-at="2025-03-21T09:06:36 CET" duration-ms="2396" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateAccountExistingMailIDTest -->
      <class name="tests.InvalidLoginTest">
        <test-method is-config="true" signature="setUp(org.testng.ITestContext)[pri:0, instance:tests.InvalidLoginTest@13b6aecc]" started-at="2025-03-21T09:05:54 CET" name="setUp" finished-at="2025-03-21T09:05:55 CET" duration-ms="688" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2fbd390]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.InvalidLoginTest@13b6aecc]" started-at="2025-03-21T09:05:55 CET" name="setUp" finished-at="2025-03-21T09:05:55 CET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testInvalidLogin()[pri:0, instance:tests.InvalidLoginTest@13b6aecc]" started-at="2025-03-21T09:05:55 CET" name="testInvalidLogin" finished-at="2025-03-21T09:06:23 CET" duration-ms="27734" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLogin -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.InvalidLoginTest@13b6aecc]" started-at="2025-03-21T09:06:23 CET" name="getResult" finished-at="2025-03-21T09:06:23 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidLogin status=SUCCESS method=InvalidLoginTest.testInvalidLogin()[pri:0, instance:tests.InvalidLoginTest@13b6aecc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.InvalidLoginTest@13b6aecc]" started-at="2025-03-21T09:06:23 CET" name="tearDown" finished-at="2025-03-21T09:06:25 CET" duration-ms="2425" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.InvalidLoginTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
